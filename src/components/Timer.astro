<h1></h1>

<style></style>

<script >
    const listaTareas = document.querySelector('.tareas');
    const nuevaTareaForm = document.querySelector('#nueva-tarea');
    const tareasPendientes = document.querySelector('.tareas-pendientes');
    const filtros = document.querySelectorAll('.filtro');
    const todasLasTareas = [];

    // Función para agregar una nueva tarea
    function agregarTarea(titulo) {
        const tarea = document.createElement('div');
        tarea.classList.add('tarea');

        const checkbox = document.createElement('input');
        checkbox.type = 'checkbox';
        checkbox.classList.add('marcar-tarea');
        checkbox.addEventListener('change', () => {
            tarea.classList.toggle('tarea-completada');
            actualizarTareasPendientes();
            filtrarTareas();
        });

        const tituloElement = document.createElement('h3');
        tituloElement.classList.add('titulo');
        tituloElement.textContent = titulo;

        const accionesElement = document.createElement('div');
        accionesElement.classList.add('acciones');

        const eliminarBoton = document.createElement('button');
        eliminarBoton.classList.add('boton-eliminar');
        eliminarBoton.textContent = 'Eliminar';
        eliminarBoton.addEventListener('click', () => {
            tarea.parentNode.removeChild(tarea);
            actualizarTareasPendientes();
            filtrarTareas();
        });
        accionesElement.appendChild(eliminarBoton);

        tarea.appendChild(checkbox);
        tarea.appendChild(tituloElement);
        tarea.appendChild(accionesElement);

        listaTareas.appendChild(tarea);
        todasLasTareas.push(tarea);
    }

    // Función para actualizar el contador de tareas pendientes
    function actualizarTareasPendientes() {
        const tareasPendientesCount = todasLasTareas.filter(tarea => !tarea.classList.contains('tarea-completada')).length;
        tareasPendientes.textContent = `Tareas pendientes: ${tareasPendientesCount}`;
    }

    // Función para manejar el filtro de tareas
    function manejarFiltro(filtroSeleccionado) {
        todasLasTareas.forEach(tarea => {
            if (filtroSeleccionado === 'todas') {
                tarea.style.display = 'block'; // Mostrar todas las tareas
            } else if (filtroSeleccionado === 'incompletas') {
                tarea.style.display = tarea.classList.contains('tarea-completada') ? 'none' : 'block';
            } else if (filtroSeleccionado === 'completas') {
                tarea.style.display = tarea.classList.contains('tarea-completada') ? 'block' : 'none';
            }
        });
    }

    // Agregar un evento al formulario para agregar una nueva tarea
    nuevaTareaForm.addEventListener('submit', (e) => {
        e.preventDefault();

        const titulo = nuevaTareaForm.querySelector('input').value.trim(); // Quitamos los espacios al inicio y al final del título

        if (titulo) {
            agregarTarea(titulo);
            nuevaTareaForm.reset(); // Reiniciamos el formulario después de agregar una tarea
            actualizarTareasPendientes();
            filtrarTareas();
        }
    });

    // Agregar eventos a los botones de filtro
    filtros.forEach((filtro) => {
        filtro.addEventListener('click', (e) => {
            // Remover la clase "activo" de todos los botones de filtro
            filtros.forEach((btn) => {
                btn.classList.remove('activo');
            });

            // Agregar la clase "activo" al botón clickeado
            e.target.classList.add('activo');

            // Manejar el filtro de tareas
            const filtroSeleccionado = e.target.id;
            manejarFiltro(filtroSeleccionado);
        });
    });

    // Función para filtrar tareas al cargar la página
    window.addEventListener('DOMContentLoaded', () => {
        manejarFiltro('todas');
    });